<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ModelAttribute"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="java.util.HashMap"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc"/>
    <fullyQualifiedTypeName name="org.springframework.boot.test.context.SpringBootTest"/>
    <fullyQualifiedTypeName name="org.springframework.test.web.servlet.MockMvc"/>
    <fullyQualifiedTypeName name="org.springframework.test.web.servlet.request.MockMvcRequestBuilders"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.userinfo.DefaultReactiveOAuth2UserService"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.userinfo.DefaultOAuth2UserService"/>
    <fullyQualifiedTypeName name="java.lang.Override"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.core.user.OAuth2User"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.core.user.OAuth2UserAuthority"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="java.util.Set"/>
    <fullyQualifiedTypeName name="java.util.Iterator"/>
    <fullyQualifiedTypeName name="kr.co.jhta.springboot12.dto.MemberDTO"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.password.PasswordEncoder"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Controller"/>
    <fullyQualifiedTypeName name="org.springframework.web.socket.handler.TextWebSocketHandler"/>
    <fullyQualifiedTypeName name="org.springframework.web.socket.config.annotation.EnableWebSocket"/>
    <fullyQualifiedTypeName name="javax.servlet.http.HttpSession"/>
    <fullyQualifiedTypeName name="java.util.Random"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.zuul.EnableZuulProxy"/>
    <fullyQualifiedTypeName name="com.netflix.zuul.ZuulFilter"/>
    <fullyQualifiedTypeName name="org.apache.http.protocol.RequestContent"/>
    <fullyQualifiedTypeName name="com.netflix.zuul.context.RequestContext"/>
    <fullyQualifiedTypeName name="io.micrometer.core.ipc.http.HttpSender.Request"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.route.RouteLocator"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestHeader"/>
    <fullyQualifiedTypeName name="kr.co.jhta.apigateway.config.CustomFilter.Config"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.filter.GatewayFilter"/>
    <fullyQualifiedTypeName name="org.springframework.http.server.reactive.ServerHttpRequest"/>
    <fullyQualifiedTypeName name="org.springframework.http.server.reactive.ServerHttpResponse"/>
    <fullyQualifiedTypeName name="jdk.internal.org.jline.utils.Log"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.filter.factory.AbstractGatewayFilterFactory"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="lombok.extern.slf4j.Slf4j"/>
    <fullyQualifiedTypeName name="kr.co.jhta.apigateway.config.GlobalFilter.Config"/>
    <fullyQualifiedTypeName name="javax.servlet.http.HttpServletRequest"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.config.server.EnableConfigServer"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
    <fullyQualifiedTypeName name="java.sql.Connection"/>
    <fullyQualifiedTypeName name="java.sql.DriverManager"/>
</qualifiedTypeNameHistroy>
